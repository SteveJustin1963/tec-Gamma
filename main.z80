; Assemble with org at the start of your memory
ORG 0000h
JP Start

; Data for simulation purposes
SpectrumData:
    DW 631, 20
    DW 862, 20
    DW 1003, 15
    DW 0FFFFh  ; End marker

; Start of the program
Start:
    CALL SerialInit
    CALL DisplayGraph
    CALL MainLoop

; Initialize serial communication (placeholder for actual initialization)
SerialInit:
    RET

; Main program loop for command input
MainLoop:
    CALL PrintMenu
    CALL GetChar          ; Corrected subroutine call
    CP 'Q'
    JP Z, Quit
    CP 'R'
    JP Z, RandomizeData
    CP 'S'
    JP Z, SendData
    JP MainLoop

; Prints menu options
PrintMenu:
    LD HL, MenuMsg
    CALL PrintString
    RET

MenuMsg:
    DB 'Press `R` to randomize data, `S` to send data, `Q` to quit:', 0

; Handles 'R' command
RandomizeData:
    CALL DisplayGraph
    RET

; Handles 'S' command
SendData:
    RET

; Display graph based on spectrum data
DisplayGraph:
    LD HL, SpectrumData
GraphLoop:
    LD A, (HL)
    INC HL
    PUSH HL
    CALL PrintDecimal
    LD DE, GraphMsg
    CALL PrintString
    POP HL
    LD B, A
    CALL PrintStars
    LD A, 10
    CALL PrintChar
    LD A, 13
    CALL PrintChar
    INC HL
    LD A, (HL)
    OR A
    JR Z, GraphLoop
    RET

GraphMsg:
    DB ' keV | ', 0

PrintStars:
    LD A, '*'
StarLoop:
    CALL PrintChar
    DJNZ StarLoop
    RET

PrintDecimal:
    RET

PrintString:
    RET

PrintChar:
    RET

Quit:
    RET

; Subroutine to get a character from input
GetChar:
    IN A, (01h)          ; Read a character from the input port (01h)
    AND 7Fh              ; Convert ASCII to uppercase if necessary
    RET
